name: Rust

on: [push, pull_request]

jobs:
  check_dependencies:
    name: Check Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Check Dependencies with Cargo
        uses: actions-rs/cargo@v1
        with:
          command: check

  lint:
    name: Check lint
    runs-on: ubuntu-latest
    needs: check_dependencies

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run lint_check
        uses: actions-rs/cargo@v1
        with:
          command: lint_check

      - name: Run lint_fix
        uses: actions-rs/cargo@v1
        with:
          command: lint_fix


  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build Rust Project
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

  unit_test:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run Rust Tests
        uses: actions-rs/cargo@v1
        with:
          command: test

      # - name: Run API with Cargo
      #   run: cargo run &

      # - name: Install Node.js
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '18'

      # - name: Install Newman
      #   run: npm install -g newman

      # - name: Download Postman collection
      #   env:
      #       POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
      #       POSTMAN_CORE_API_COLLECTION_ID: ${{ vars.POSTMAN_CORE_API_COLLECTION_ID }}
      #   run: |
      #     curl -o collection.json "https://api.getpostman.com/collections/${POSTMAN_CORE_API_COLLECTION_ID}?apikey=${POSTMAN_API_KEY}"

      # - name: Run Postman tests with Newman
      #   run: |
      #     newman run collection.json --bail

  integration-test:
    name: Postman Tests
    needs: unit_test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version


      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Build and start services
        run: docker-compose up -d --build

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Newman
        run: npm install -g newman

      - name: Download Postman collection
        env:
            POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
            POSTMAN_CORE_API_COLLECTION_ID: ${{ vars.POSTMAN_CORE_API_COLLECTION_ID }}
        run: |
          curl -o collection.json "https://api.getpostman.com/collections/${POSTMAN_CORE_API_COLLECTION_ID}?apikey=${POSTMAN_API_KEY}"

      - name: Run Postman tests with Newman
        run: |
          newman run collection.json --bail

      - name: Tear down
        if: always()
        run: docker-compose down

      # - name: Retrieve and Run Postman Collection
      #   env:
      #     POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
      #     POSTMAN_CORE_API_COLLECTION_ID: ${{ secrets.POSTMAN_CORE_API_COLLECTION_ID }}
      #   run: |
      #     newman run "https://api.getpostman.com/collections/${POSTMAN_CORE_API_COLLECTION_ID}?apikey=${POSTMAN_API_KEY}"

