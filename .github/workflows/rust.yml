name: Rust

on: [push, pull_request]

jobs:
  dependencies:
    name: Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Download Dependencies
        run: cargo fetch

      - name: Cache Cargo Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Upload Dependency Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cargo-dependencies
          path: |
            ~/.cargo/registry
            ~/.cargo/git

  lint:
    name: Check lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run lint_check
        uses: actions-rs/cargo@v1
        with:
          command: lint_check

      - name: Run lint_fix
        uses: actions-rs/cargo@v1
        with:
          command: lint_fix

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: dependencies  # Assurez-vous que ce job est exécuté avant le build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Download Dependency Artifacts
        uses: actions/download-artifact@v4
        with:
          name: cargo-dependencies
          path: ~/.cargo

      - name: Build Rust Project
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rust-build-artifacts
          path: target/release/

  # test:
  #   name: Run API and Postman Tests
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4.2.2

  #     - name: Setup Rust
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         override: true

  #     - name: Run Rust Tests
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: test

  #     - name: Run API with Cargo
  #       run: cargo run &

  #     - name: Install Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '18'

  #     - name: Install Newman
  #       run: npm install -g newman

  #     - name: Retrieve and Run Postman Collection
  #       env:
  #         POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
  #         POSTMAN_CORE_API_COLLECTION_ID: ${{ secrets.POSTMAN_CORE_API_COLLECTION_ID }}
  #       run: |
  #         curl -X GET "https://api.getpostman.com/collections/$POSTMAN_CORE_API_COLLECTION_ID" \
  #           -H "X-Api-Key: $POSTMAN_API_KEY" \
  #           -o collection.json

  #         # Check if the curl command was successful
  #         if [ $? -eq 0 ]; then
  #           echo "The collection was successfully retrieved and saved to collection.json"

  #           # Run the collection with Newman
  #           newman run collection.json
  #         else
  #           echo "An error occurred while retrieving the collection"
  #           exit 1
  #         fi

